// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`custom validation 1`] = `
<Form
  onSubmit={[Function]}
>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <FormField
      label="input"
      name="input"
      validate={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          className="field-label"
          htmlFor="input"
        >
          <span
            className="required"
          />
          <span
            className="label"
          >
            input
          </span>
        </label>
        <div
          className="field-input"
        >
          <Input
            api={
              Object {
                "addField": [Function],
                "changeField": [Function],
                "getErrors": [Function],
                "getTouched": [Function],
                "getValues": [Function],
                "removeField": [Function],
                "setValue": [Function],
              }
            }
            changeFieldValue={[Function]}
            label="input"
            name="input"
            validate={[Function]}
          >
            <input
              autoComplete="off"
              className="input"
              id="input"
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value=""
            />
          </Input>
        </div>
      </div>
    </FormField>
  </form>
</Form>
`;

exports[`custom validation 2`] = `
<Form
  onSubmit={[Function]}
>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <FormField
      label="input"
      name="input"
      validate={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          className="field-label"
          htmlFor="input"
        >
          <span
            className="required"
          />
          <span
            className="label"
          >
            input
          </span>
        </label>
        <div
          className="field-input"
        >
          <Input
            api={
              Object {
                "addField": [Function],
                "changeField": [Function],
                "getErrors": [Function],
                "getTouched": [Function],
                "getValues": [Function],
                "removeField": [Function],
                "setValue": [Function],
              }
            }
            changeFieldValue={[Function]}
            label="input"
            name="input"
            validate={[Function]}
            value="123"
          >
            <input
              autoComplete="off"
              className="input"
              id="input"
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="123"
            />
          </Input>
        </div>
        <FormError
          name="input"
        />
      </div>
    </FormField>
  </form>
</Form>
`;

exports[`form onvalid oninvalid method 1`] = `
<Form
  onInvalid={[Function]}
  onSubmit={[Function]}
  onValid={[Function]}
>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <FormField
      label="input"
      name="input"
      validate={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          className="field-label"
          htmlFor="input"
        >
          <span
            className="required"
          />
          <span
            className="label"
          >
            input
          </span>
        </label>
        <div
          className="field-input"
        >
          <Input
            api={
              Object {
                "addField": [Function],
                "changeField": [Function],
                "getErrors": [Function],
                "getTouched": [Function],
                "getValues": [Function],
                "removeField": [Function],
                "setValue": [Function],
              }
            }
            changeFieldValue={[Function]}
            label="input"
            name="input"
            validate={[Function]}
          >
            <input
              autoComplete="off"
              className="input"
              id="input"
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value=""
            />
          </Input>
        </div>
      </div>
    </FormField>
  </form>
</Form>
`;

exports[`form onvalid oninvalid method 2`] = `
<Form
  onInvalid={[Function]}
  onSubmit={[Function]}
  onValid={[Function]}
>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <FormField
      label="input"
      name="input"
      validate={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          className="field-label"
          htmlFor="input"
        >
          <span
            className="required"
          />
          <span
            className="label"
          >
            input
          </span>
        </label>
        <div
          className="field-input"
        >
          <Input
            api={
              Object {
                "addField": [Function],
                "changeField": [Function],
                "getErrors": [Function],
                "getTouched": [Function],
                "getValues": [Function],
                "removeField": [Function],
                "setValue": [Function],
              }
            }
            changeFieldValue={[Function]}
            label="input"
            name="input"
            validate={[Function]}
            value="012345"
          >
            <input
              autoComplete="off"
              className="input"
              id="input"
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="012345"
            />
          </Input>
        </div>
        <FormError
          name="input"
        />
      </div>
    </FormField>
  </form>
</Form>
`;

exports[`form submit 1`] = `
<Form
  onSubmit={[Function]}
>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <FormField
      label="input"
      name="input"
      validate={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          className="field-label"
          htmlFor="input"
        >
          <span
            className="required"
          />
          <span
            className="label"
          >
            input
          </span>
        </label>
        <div
          className="field-input"
        >
          <Input
            api={
              Object {
                "addField": [Function],
                "changeField": [Function],
                "getErrors": [Function],
                "getTouched": [Function],
                "getValues": [Function],
                "removeField": [Function],
                "setValue": [Function],
              }
            }
            changeFieldValue={[Function]}
            label="input"
            name="input"
            validate={[Function]}
          >
            <input
              autoComplete="off"
              className="input"
              id="input"
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value=""
            />
          </Input>
        </div>
      </div>
    </FormField>
  </form>
</Form>
`;

exports[`form submit 2`] = `
<Form
  onSubmit={[Function]}
>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <FormField
      label="input"
      name="input"
      validate={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          className="field-label"
          htmlFor="input"
        >
          <span
            className="required"
          />
          <span
            className="label"
          >
            input
          </span>
        </label>
        <div
          className="field-input"
        >
          <Input
            api={
              Object {
                "addField": [Function],
                "changeField": [Function],
                "getErrors": [Function],
                "getTouched": [Function],
                "getValues": [Function],
                "removeField": [Function],
                "setValue": [Function],
              }
            }
            changeFieldValue={[Function]}
            label="input"
            name="input"
            validate={[Function]}
            value="012345"
          >
            <input
              autoComplete="off"
              className="input"
              id="input"
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="012345"
            />
          </Input>
        </div>
        <FormError
          name="input"
        />
      </div>
    </FormField>
  </form>
</Form>
`;
